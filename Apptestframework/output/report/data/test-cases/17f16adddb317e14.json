{
  "uid" : "17f16adddb317e14",
  "name" : "test_login_user_01[特殊字符-rt(123);</ja]",
  "fullName" : "test_login.TestLogin#test_login_user_01",
  "historyId" : "c6f4cf3425f5443da4fb4c1831f96fe6",
  "time" : {
    "start" : 1616056521225,
    "stop" : 1616056522291,
    "duration" : 1066
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'rt(123);</j' == '请输入手机号'\n  - 请输入手机号\n  + rt(123);</j",
  "statusTrace" : "self = <testcase.test_login.TestLogin object at 0x0000022277111CC8>\ntitle = '特殊字符', user = 'rt(123);</ja'\n\n    @pytest.mark.cs\n    @pytest.mark.parametrize('title,user', [[\"汉字\", \"中国\"], [\"字母\", 'abc'], [\"特殊字符\", 'rt(123);</ja']])\n    def test_login_user_01(self, title, user):\n        BasePage(driver).input_element(user, loc_l.userLocator, f\"登录页-输入  {title}\")\n        # 断言输入框输不进去汉字，默认字符是 请输入手机号\n>       assert BasePage(driver).get_element_toast(loc_l.userLocator, \"登录页-输入汉字,英文，特殊字符\") == \"请输入手机号\"\nE       AssertionError: assert 'rt(123);</j' == '请输入手机号'\nE         - 请输入手机号\nE         + rt(123);</j\n\ntest_login.py:40: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "login",
    "time" : {
      "start" : 1616056509111,
      "stop" : 1616056518258,
      "duration" : 9147
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'rt(123);</j' == '请输入手机号'\n  - 请输入手机号\n  + rt(123);</j",
    "statusTrace" : "self = <testcase.test_login.TestLogin object at 0x0000022277111CC8>\ntitle = '特殊字符', user = 'rt(123);</ja'\n\n    @pytest.mark.cs\n    @pytest.mark.parametrize('title,user', [[\"汉字\", \"中国\"], [\"字母\", 'abc'], [\"特殊字符\", 'rt(123);</ja']])\n    def test_login_user_01(self, title, user):\n        BasePage(driver).input_element(user, loc_l.userLocator, f\"登录页-输入  {title}\")\n        # 断言输入框输不进去汉字，默认字符是 请输入手机号\n>       assert BasePage(driver).get_element_toast(loc_l.userLocator, \"登录页-输入汉字,英文，特殊字符\") == \"请输入手机号\"\nE       AssertionError: assert 'rt(123);</j' == '请输入手机号'\nE         - 请输入手机号\nE         + rt(123);</j\n\ntest_login.py:40: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "7b1bd39cb4e45862",
      "name" : "log",
      "source" : "7b1bd39cb4e45862.txt",
      "type" : "text/plain",
      "size" : 654
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "login::0",
    "time" : {
      "start" : 1616056561213,
      "stop" : 1616056561395,
      "duration" : 182
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "cs"
  }, {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('login')"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "Lenovo--ZYSLL"
  }, {
    "name" : "thread",
    "value" : "13576-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "title",
    "value" : "'特殊字符'"
  }, {
    "name" : "user",
    "value" : "'rt(123);</ja'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "cs", "@pytest.mark.usefixtures('login')" ]
  },
  "source" : "17f16adddb317e14.json",
  "parameterValues" : [ "'特殊字符'", "'rt(123);</ja'" ]
}